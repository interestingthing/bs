package personal.bs.dao.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import personal.bs.domain.po.OrderPO;
import personal.bs.domain.po.OrderPOExample;

public interface OrderPOMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated
     */
    long countByExample(OrderPOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated
     */
    int deleteByExample(OrderPOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated
     */
    @Delete({
        "delete from orders",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated
     */
    @Insert({
        "insert into orders (order_id, user_id, ",
        "store_id, address_id, ",
        "create_time, status, ",
        "pay_time, pay_type, ",
        "pay_status, sum_money, ",
        "pay_money, usernick)",
        "values (#{orderId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, ",
        "#{storeId,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, ",
        "#{payTime,jdbcType=TIMESTAMP}, #{payType,jdbcType=VARCHAR}, ",
        "#{payStatus,jdbcType=VARCHAR}, #{sumMoney,jdbcType=DOUBLE}, ",
        "#{payMoney,jdbcType=DOUBLE}, #{usernick,jdbcType=VARCHAR})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(OrderPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated
     */
    int insertSelective(OrderPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated
     */
    List<OrderPO> selectByExample(OrderPOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, order_id, user_id, store_id, address_id, create_time, status, pay_time, ",
        "pay_type, pay_status, sum_money, pay_money, usernick",
        "from orders",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("personal.bs.dao.mapper.OrderPOMapper.BaseResultMap")
    OrderPO selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") OrderPO record, @Param("example") OrderPOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") OrderPO record, @Param("example") OrderPOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(OrderPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated
     */
    @Update({
        "update orders",
        "set order_id = #{orderId,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=INTEGER},",
          "store_id = #{storeId,jdbcType=INTEGER},",
          "address_id = #{addressId,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "status = #{status,jdbcType=VARCHAR},",
          "pay_time = #{payTime,jdbcType=TIMESTAMP},",
          "pay_type = #{payType,jdbcType=VARCHAR},",
          "pay_status = #{payStatus,jdbcType=VARCHAR},",
          "sum_money = #{sumMoney,jdbcType=DOUBLE},",
          "pay_money = #{payMoney,jdbcType=DOUBLE},",
          "usernick = #{usernick,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(OrderPO record);
}