package personal.bs.dao.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import personal.bs.domain.po.StorePO;
import personal.bs.domain.po.StorePOExample;

public interface StorePOMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table store
     *
     * @mbg.generated
     */
    long countByExample(StorePOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table store
     *
     * @mbg.generated
     */
    int deleteByExample(StorePOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table store
     *
     * @mbg.generated
     */
    @Delete({
        "delete from store",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table store
     *
     * @mbg.generated
     */
    @Insert({
        "insert into store (name, nickname, ",
        "password, telephone, ",
        "addressDetail, linkmanName, ",
        "linkmanMobile, licenseNumber, ",
        "legalPerson, status, ",
        "create_time, loginname)",
        "values (#{name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, ",
        "#{addressdetail,jdbcType=VARCHAR}, #{linkmanname,jdbcType=VARCHAR}, ",
        "#{linkmanmobile,jdbcType=VARCHAR}, #{licensenumber,jdbcType=VARCHAR}, ",
        "#{legalperson,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{loginname,jdbcType=VARCHAR})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(StorePO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table store
     *
     * @mbg.generated
     */
    int insertSelective(StorePO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table store
     *
     * @mbg.generated
     */
    List<StorePO> selectByExample(StorePOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table store
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, name, nickname, password, telephone, addressDetail, linkmanName, linkmanMobile, ",
        "licenseNumber, legalPerson, status, create_time, loginname",
        "from store",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("personal.bs.dao.mapper.StorePOMapper.BaseResultMap")
    StorePO selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table store
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") StorePO record, @Param("example") StorePOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table store
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") StorePO record, @Param("example") StorePOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table store
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(StorePO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table store
     *
     * @mbg.generated
     */
    @Update({
        "update store",
        "set name = #{name,jdbcType=VARCHAR},",
          "nickname = #{nickname,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "telephone = #{telephone,jdbcType=VARCHAR},",
          "addressDetail = #{addressdetail,jdbcType=VARCHAR},",
          "linkmanName = #{linkmanname,jdbcType=VARCHAR},",
          "linkmanMobile = #{linkmanmobile,jdbcType=VARCHAR},",
          "licenseNumber = #{licensenumber,jdbcType=VARCHAR},",
          "legalPerson = #{legalperson,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "loginname = #{loginname,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(StorePO record);
}